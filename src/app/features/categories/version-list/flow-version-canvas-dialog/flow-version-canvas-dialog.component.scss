.canvas-dialog-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
  position: relative;  .canvas-header {
    /* Enhanced header styling applied globally via styles.scss */
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 16px;
    height: 2.5rem;
    min-height: 2.5rem;
    background: #ffffff;
    color: var(--text-primary);
    border-bottom: 1px solid rgba(108, 99, 255, 0.1);
    box-shadow: 0 2px 12px rgba(108, 99, 255, 0.15), 
                0 1px 3px rgba(0, 0, 0, 0.1);
    position: relative;
    z-index: 10;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(180deg, rgba(108, 99, 255, 0.02) 0%, transparent 100%);
      pointer-events: none;
    }
    
    .header-left {
      display: flex;
      align-items: center;
      gap: 8px;
      z-index: 1;
      position: relative;

      mat-icon {
        color: var(--primary-color);
        font-size: 20px;
        width: 20px;
        height: 20px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
      }

      .version-name {
        font-size: 16px;
        font-weight: 600;
        margin: 0;
        color: var(--text-primary);
      }
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 4px;
      z-index: 1;
      position: relative;

      /* Override Material Design button defaults to fix hover circle issue */
      .mat-mdc-icon-button {
        --mdc-icon-button-state-layer-size: 32px;
        --mdc-icon-button-size: 32px;
        background: rgba(108, 99, 255, 0.05) !important;
        color: var(--primary-color) !important;
        border: 1px solid rgba(108, 99, 255, 0.1) !important;
        border-radius: 6px !important;
        width: 32px !important;
        height: 32px !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        transition: all 0.2s ease !important;
        
        /* Disable Material Design ripple effect */
        .mat-mdc-button-ripple,
        .mat-ripple,
        .mdc-button__ripple {
          display: none !important;
        }
        
        /* Override Material Design hover state layer */
        &::before,
        &::after,
        .mdc-button__ripple::before,
        .mdc-button__ripple::after {
          display: none !important;
        }
        
        mat-icon {
          font-size: 18px !important;
          width: 18px !important;
          height: 18px !important;
          display: inline-flex !important;
          align-items: center !important;
          justify-content: center !important;
          margin: 0 !important;
        }
        
        &:hover {
          background: rgba(108, 99, 255, 0.15) !important;
          border-color: var(--primary-color) !important;
          transform: translateY(-1px) !important;
          box-shadow: 0 2px 8px rgba(108, 99, 255, 0.2) !important;
        }
        
        &[disabled] {
          color: rgba(0, 0, 0, 0.26) !important;
          background: rgba(0, 0, 0, 0.04) !important;
          border-color: rgba(0, 0, 0, 0.1) !important;
          
          &:hover {
            transform: none !important;
            box-shadow: none !important;
          }
        }
      }

      /* Legacy support for regular buttons */
      button:not(.mat-mdc-icon-button) {
        background: rgba(108, 99, 255, 0.05);
        color: var(--primary-color);
        border: 1px solid rgba(108, 99, 255, 0.1);
        border-radius: 6px;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        
        mat-icon {
          font-size: 18px;
          width: 18px;
          height: 18px;
          display: inline-flex;
          align-items: center;
          justify-content: center;
        }
        
        &:hover {
          background: rgba(108, 99, 255, 0.15);
          border-color: var(--primary-color);
          transform: translateY(-1px);
          box-shadow: 0 2px 8px rgba(108, 99, 255, 0.2);
        }
        
        &[disabled] {
          color: rgba(0, 0, 0, 0.26);
          background: rgba(0, 0, 0, 0.04);
          border-color: rgba(0, 0, 0, 0.1);
        }
      }
    }
  }  .nodes-list-panel {
    position: absolute;
    top: 3.6rem;
    left: 0;
    width: 320px;
    height: calc(100vh - 2.5rem);
    background: white;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    z-index: 100;

    &.collapsed {
      transform: translateX(-320px);
    }    
    
    /* Fix toggle button for nodes panel */
    .mat-mdc-icon-button {
      position: absolute !important;
      top: 50% !important;
      right: -32px !important;
      transform: translateY(-50%) !important;
      background: white !important;
      border-radius: 50% !important;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1) !important;
      z-index: 101 !important;
      width: 32px !important;
      height: 32px !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
      cursor: pointer !important;
      border: none !important;
      outline: none !important;
      color: var(--primary-color) !important;
      
      /* Disable Material Design ripple effect */
      .mat-mdc-button-ripple,
      .mat-ripple,
      .mdc-button__ripple {
        display: none !important;
      }
      
      /* Override Material Design hover state layer */
      &::before,
      &::after,
      .mdc-button__ripple::before,
      .mdc-button__ripple::after {
        display: none !important;
      }

      mat-icon {
        width: 20px !important;
        height: 20px !important;
        font-size: 20px !important;
        display: inline-flex !important;
        align-items: center !important;
        justify-content: center !important;
        margin: 0 !important;
      }
      
      &:hover {
        background: rgba(108, 99, 255, 0.1) !important;
        transform: translateY(-50%) scale(1.05) !important;
        box-shadow: 2px 0 8px rgba(108, 99, 255, 0.2) !important;
      }
    }
    
    /* Legacy support for regular buttons */
    button:not(.mat-mdc-icon-button) {
      position: absolute;
      top: 50%;
      right: -32px;
      transform: translateY(-50%);
      background: white;
      border-radius: 50%;
      box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
      z-index: 101;
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      border: none;
      outline: none;
      color: var(--primary-color);

      mat-icon {
        width: 20px;
        height: 20px;
        font-size: 20px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
      }
      
      &:hover {
        background: rgba(108, 99, 255, 0.1);
        transform: translateY(-50%) scale(1.05);
        box-shadow: 2px 0 8px rgba(108, 99, 255, 0.2);
      }
    }
  }  .canvas-content {
    flex: 1;
    overflow: auto;
    padding-top: 2.5rem;
    margin-left: 0;
    transition: margin-left 0.3s ease;

    &.with-palette {
      margin-left: 320px;
    }
  }

  .zoom-controller {
    position: fixed;
    bottom: 16px;
    left: 16px;
    display: flex;
    gap: 8px;
    align-items: center;
    background: rgba(255, 255, 255, 0.9);
    padding: 8px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
}

  .node-menu {
    max-width: 400px;
    padding: 16px;
  }
  
  .node-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 16px;
    padding: 8px;
  }
  
  .node-card-preview {
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 12px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    cursor: move;
    transition: all 0.2s ease;
    
    &:hover {
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      transform: translateY(-2px);
    }
  }
  
  .node-preview-icon {
    width: 32px;
    height: 32px;
    object-fit: contain;
  }
  
  .node-preview-title {
    font-size: 12px;
    text-align: center;
    color: #333;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 100%;
  }
    .canvas-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    height: 2.5rem;
    min-height: 2.5rem;
    background: #ffffff;
    color: var(--text-primary);
    border-bottom: 1px solid rgba(108, 99, 255, 0.1);
    box-shadow: 0 2px 12px rgba(108, 99, 255, 0.15), 
                0 1px 3px rgba(0, 0, 0, 0.1);
    z-index: 1000;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 16px;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(180deg, rgba(108, 99, 255, 0.02) 0%, transparent 100%);
      pointer-events: none;
    }
    
    .header-left {
      display: flex;
      align-items: center;
      gap: 8px;
      z-index: 1;
      position: relative;

      mat-icon {
        color: var(--primary-color);
        font-size: 20px;
        width: 20px;
        height: 20px;
      }

      .version-name {
        font-size: 16px;
        font-weight: 600;
        margin: 0;
        color: var(--text-primary);
      }
    }

    .header-right {
      display: flex;
      align-items: center;
      gap: 4px;
      z-index: 1;
      position: relative;

      button {
        background: rgba(108, 99, 255, 0.05);
        color: var(--primary-color);
        border: 1px solid rgba(108, 99, 255, 0.1);
        border-radius: 6px;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
        
        mat-icon {
          font-size: 18px;
          width: 18px;
          height: 18px;
        }
        
        &:hover {
          background: rgba(108, 99, 255, 0.15);
          border-color: var(--primary-color);
          transform: translateY(-1px);
          box-shadow: 0 2px 8px rgba(108, 99, 255, 0.2);
        }
        
        &[disabled] {
          color: rgba(0, 0, 0, 0.26);
          background: rgba(0, 0, 0, 0.04);
          border-color: rgba(0, 0, 0, 0.1);
        }
      }
    }  }
  
  .version-name {
    font-size: 18px;
    font-weight: 600;
  }
  
  .canvas-controls {
    display: flex;
    gap: 8px;
    align-items: center;
  }
  
  /* Adjust canvas content to avoid overlap with fixed header */
  .canvas-content {
    flex: 1;
    overflow: auto;
    padding-top: 2.5rem; // Match header height
  }
  
  /* Scrollable canvas container */
  .canvas-container {
    position: relative;
    // border: 1px dashed #aaa;
    overflow: auto;
    flex: 1;
  }
  
  /* Scaled canvas */
  .canvas-area {
    position: relative;
    display: block;
    min-width: 1000px;
    min-height: 1200px;
    transition: transform 0.2s ease-in-out;
  }

  .connections-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;

    path {
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        stroke: #1976d2;
        stroke-width: 3;
      }
    }    .condition-chip {
      --chip-color: #1976d2;
      background: rgba(255, 255, 255, 0.9);
      border: 1px solid #ddd;
      border-radius: 12px;
      padding: 2px 8px;
      font-size: 12px;
      color: rgba(0, 0, 0, 0.6);
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      text-align: center;
      pointer-events: all;
      user-select: none;
      cursor: pointer;
      transition: all 0.2s ease;

      &:hover {
        background: color-mix(in srgb, var(--chip-color) 10%, white);
        border-color: var(--chip-color);
        color: var(--chip-color);
      }

      &.selected {
        background: color-mix(in srgb, var(--chip-color) 10%, white);
        border-color: var(--chip-color);
        color: var(--chip-color);
        box-shadow: 0 1px 3px color-mix(in srgb, var(--chip-color) 20%, transparent);
      }
    }
  }
  
  /* Node styling */
  .draggable-node {
    position: absolute;
    width: 100px;
    height: 100px;
    border-radius: 8px;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    cursor: move;
    user-select: none;
  }
  
  /* Dialog wrapper (if used inside Angular Material dialog) */
  ::ng-deep .cdk-overlay-pane.fullscreen-dialog,
  ::ng-deep .mat-dialog-container.fullscreen-dialog{
    width: 100vw !important;
    height: 100vh !important;
    max-width: 100vw !important;
    max-height: 100vh !important;
    padding: 0 !important;
    background: #fff;
    overflow: hidden;
  }

  
  .node-card {
    position: absolute;
    background: white;
    border: 1px solid #ddd;
    cursor: move;
    user-select: none;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      box-shadow: 0 0px 2px var(--node-shadow-color, rgba(0, 0, 0, 0.15));
      opacity: 0.5;
      pointer-events: none;
    }

    .connection-points {
      position: absolute;
      width: 100%;
      
      &.inputs {
        top: -8px;
        display: flex;
        justify-content: space-evenly;
        
        .point {
          width: 6px;
          height: 6px;
          background: #666;
          border: 2px solid white;
          border-radius: 50%;
          cursor: pointer;
          
          &:hover {
            transform: scale(1.2);
          }
        }
      }
      
      &.outputs {
        bottom: -8px;
        display: flex;
        justify-content: space-evenly;
        
        .point {
          width: 6px;
          height: 6px;
          background: #666;
          border: 2px solid white;
          border-radius: 50%;
          cursor: pointer;
          
          &:hover {
            transform: scale(1.2);
          }
        }
      }
    }

    &.rectangle {
      border-radius: 8px;
      padding: 10px;
      width: 300px;
    }

    &.circle {
      border-radius: 50%;
      width: 50px;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0;

      .node-icon {
        width: 32px;
        height: 32px;
      }
      .node-title,
      .node-divider,
      .node-info {
        display: none;
      }
    }

    &.selected {
      border: 1px solid var(--node-color, #1976d2);
      box-shadow: 0 0 0 1px var(--node-shadow-color, rgba(25, 118, 210, 0.2));
      
      &::before {
        box-shadow: 0 0 1px var(--node-shadow-color, rgba(25, 118, 210, 0.4));
      }
    }
  }
  
  .node-header {
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .node-icon {
    width: 20px;
    height: 20px;
  }
  
  .node-title {
    font-weight: 600;
    font-size: 14px;
    color: #333;
  }
  
  .node-divider {
    height: 1px;
    background: #eee;
    margin: 8px 0;
  }
  
  .node-info {
    font-size: 12px;
  }
  
  .info-row {
    display: flex;
    gap: 4px;
    margin-bottom: 4px;
    overflow: ellipsis;
    overflow: hidden;
  }
  
  .info-label {
    color: #888;
  }
  
  .info-value {
    background: #f0f0ff;
    color: #5c3dcb;
    padding: 2px 6px;
    border-radius: 6px;
    font-weight: 500;
  }

  /* Attribute Window Styles */
  ::ng-deep .attribute-window {
    .mat-dialog-container {
      padding: 0;
      border-radius: 8px;
      overflow: hidden;
    }
  }

  /* Condition Editor Dialog Styles */
:host ::ng-deep {
  .condition-editor-dialog {
    .mat-mdc-dialog-container {
      padding: 0;
    }
  }

  .mat-mdc-form-field {
    .mat-mdc-form-field-subscript-wrapper {
      height: 20px;
    }
  }

  .mat-mdc-form-field-error {
    font-size: 12px;
  }

  // Connection highlight animation
  .connections-layer {
    path {
      transition: stroke-width 0.3s ease-in-out, stroke-opacity 0.3s ease-in-out;
    }

    .condition-chip {
      transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;

      &.selected {
        transform: scale(1.05);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
      }
    }
  }
}
