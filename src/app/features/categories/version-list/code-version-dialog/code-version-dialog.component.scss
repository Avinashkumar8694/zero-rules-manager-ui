.dialog-header {
  /* Enhanced header styling applied globally via styles.scss with 3.5rem height */
  h2 {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 8px;
  }
}

.tab-content {
  padding: var(--tab-content-padding);
  padding-bottom: calc(3.5rem + var(--spacing-xl));  // Account for sticky footer height + extra spacing
  height: 100%;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
}

.form-field {
  margin-bottom: var(--form-field-spacing);

  label {
    display: block;
    margin-bottom: var(--form-label-spacing);
    font-size: var(--font-size-base);
    color: var(--form-label);
    font-weight: var(--font-weight-medium);
  }

  mat-form-field {
    width: 100%;

    ::ng-deep {
      .mat-mdc-form-field-flex {
        background-color: var(--form-bg);
      }

      .mat-mdc-text-field-wrapper {
        background-color: var(--form-bg);
        border: var(--border-width) var(--border-style) var(--form-border);
        border-radius: var(--border-radius-sm);
        padding: var(--form-padding);
        font-size: var(--font-size-base);
        transition: border-color var(--transition-fast), box-shadow var(--transition-fast);

        &:hover {
          border-color: var(--form-hover-border);
          background: var(--form-hover-bg);
        }
      }

      .mdc-text-field--outlined {
        --mdc-outlined-text-field-container-shape: 4px;
      }      .mat-mdc-form-field-focus-overlay {
        background-color: var(--white);
      }

      .mat-mdc-form-field-focus-overlay:focus-within {
        border-color: var(--btn-primary-bg);
        box-shadow: 0 0 0 2px var(--blue-alpha-10);
      }
    }
  }
}

.columns-section {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 24px;
  flex: 1;
  overflow: visible; // Let parent tab-content handle scrolling
  margin-bottom: 20px; // Extra margin to ensure buttons don't get too close to footer
}


.column-config {  h3 {
    margin: 0 0 var(--spacing-md);
    font-size: var(--font-size-lg);
    color: var(--title-color);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);

    mat-icon {
      font-size: var(--icon-size-md);
      color: var(--indigo);
    }
  }
}

.columns-list {
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-bottom: 16px; // Add bottom margin to ensure add buttons have space
}

.column-field {
  display: grid;
  grid-template-columns: 1fr 1fr auto;
  gap: 16px;
  align-items: start;
  margin-bottom: 16px;

  mat-form-field {
    ::ng-deep {
      .mat-mdc-form-field-flex {
        background-color: #fff;
      }

      .mat-mdc-text-field-wrapper {
        background-color: #fff;
      }
    }
  }
}

.code-editor-section {
  flex: 1;
  min-height: 200px;
  border-radius: 4px;
  overflow: hidden;  border: var(--border-width) var(--border-style) var(--editor-border);
  display: flex;
  flex-direction: column;
  max-height: 400px;
  
  ngx-monaco-editor {
    flex: 1;
    min-height: 400px;
  }
}

.dialog-container {
  /* Use global dialog styles from styles.scss for proper flexbox layout */
  min-width: 600px;
  max-width: 800px;
  height: 75vh; // Set a fixed height to ensure proper flex behavior
  max-height: 75vh;
}

.dialog-form {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
  height: 100%;
}

.dialog-content {
  /* Content styling handled by global styles.scss */
  overflow: hidden !important; // Prevent outer scroll, let tabs handle scrolling
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0; // Important for flex shrinking
}

.dialog-actions {
  /* Sticky footer styling handled by global styles.scss */
  .btn-primary,
  .btn-secondary {
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 14px;
    min-width: 100px;
    cursor: pointer;
    transition: all 0.2s;

    mat-icon {
      margin-right: 4px;
    }
  }
  .btn-primary {
    background: var(--btn-primary-bg);
    color: var(--white);
    border: none;

    &:hover {
      background: var(--btn-primary-hover);
    }

    &:disabled {
      background: var(--btn-primary-disabled);
      cursor: not-allowed;
    }
  }

  .btn-secondary {
    background: var(--btn-secondary-bg);
    color: var(--btn-secondary-color);
    border: var(--border-width) var(--border-style) var(--btn-secondary-border);

    &:hover {
      background: var(--btn-secondary-hover);
    }
  }
  .spinner {
    width: var(--icon-size-md);
    height: var(--icon-size-md);
    border: 2px solid var(--white);
    border-top-color: transparent;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }

  mat-progress-spinner {
    display: inline-block;
    margin-left: 8px;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }
}

::ng-deep {
  .mat-mdc-tab-group {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .mat-mdc-tab-body-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    min-height: 0; // Important for flex shrinking
  }

  .mat-mdc-tab-body {
    flex: 1;
    display: flex;
    flex-direction: column;
    overflow: hidden;
  }
  .mat-mdc-tab-body-content {
    flex: 1;
    overflow: hidden; // Remove scroll here, let tab-content handle it
    padding: 0;
  }

  .mat-mdc-tab {
    min-width: 120px;
  }

  .mdc-text-field--outlined {
    --mdc-outlined-text-field-container-shape: 4px;
  }
}

.btn-icon {
  background: none;
  border: none;
  color: var(--btn-danger-color);
  cursor: pointer;
  padding: var(--spacing-xs);
}

.btn-add {
  display: flex;
  align-items: center;
  gap: 3px;
  background: none;
  border: none;
  color: var(--btn-link-color);
  cursor: pointer;
  padding: calc(var(--spacing-xs) * 2) 0;
  font-size: var(--font-size-sm);
}

/* Component-specific override to prevent double scrollbars */
:host {
  ::ng-deep .dialog-content {
    overflow: hidden !important;
    padding: 0 !important; // Remove global padding, let tabs handle it
  }
}