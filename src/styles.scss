/* You can add global styles to this file, and also import other style files */
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Material+Icons+Outlined&display=swap');
:root {
  /* Colors */
  --primary-color: #6c63ff;
  --primary-light: #6c63ff40;
  --accent-color: #ff6584;
  --error-color: #d93025;
  --error-light: #fce8e6;
  --text-primary: #2a3b4d;
  --text-secondary: #86868b;
  --text-light: #b8bcc8;
  --background-primary: #ffffff;
  --background-secondary: #f8fafd;
  --surface-dark: #2d2d3a;
  --border-color: rgba(0, 0, 0, 0.1);

  /* Typography */
  --font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen-Sans, Ubuntu, Cantarell, sans-serif;
  --font-size-sm: 10px;
  --font-size-base: 14px;
  --font-size-lg: 16px;
  --font-size-xl: 20px;
  --font-size-xxl: 24px;

  /* Spacing */
  --spacing-xs: 3px;
  --spacing-sm: 8px;
  --spacing-md: 16px;
  --spacing-lg: 24px;
  --spacing-xl: 32px;

  /* Border Radius */
  --border-radius-sm: 4px;
  --border-radius-md: 8px;
  --border-radius-lg: 12px;
  --border-radius-xl: 16px;

  /* Transitions */
  --transition-fast: 0.2s ease;
  --transition-normal: 0.3s ease;

  /* Shadows */
  --box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
}

/* Global styles */
body {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  color: var(--text-primary);
  background-color: var(--background-primary);
  margin: 0;
  padding: 0;
}

/* Form Elements */
input,
textarea,
select {
  font-family: var(--font-family);
  font-size: var(--font-size-base);
  color: var(--text-primary);
  background-color: var(--secondary-color);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  padding: var(--spacing-sm);
  transition: var(--transition-fast);
  width: 100%;
  box-sizing: border-box;
  min-height: 40px;
  box-shadow: var(--box-shadow);

  &:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px var(--primary-color);
  }

  &::placeholder {
    color: var(--text-secondary);
  }

  &:disabled {
    background-color: var(--background-secondary);
    color: var(--text-secondary);
    cursor: not-allowed;
  }
}

/* Material Form Field Overrides */
.mat-mdc-form-field {
  width: 100%;
  
  &.mat-form-field-appearance-outline {
    .mat-mdc-form-field-wrapper {
      margin: 0;
      padding: 0;
    }

    .mat-mdc-text-field-wrapper {
      background-color: var(--background-primary);
      padding: 0;
    }

    .mat-mdc-form-field-flex {
      min-height: 40px;
      padding: var(--spacing-sm) var(--spacing-md);
    }
  }

  .mat-mdc-form-field-subscript-wrapper {
    height: 20px;
  }

  .mat-mdc-form-field-hint,
  .mat-mdc-form-field-error {
    font-size: var(--font-size-sm);
  }
}

/* Button Styles */
.mat-mdc-button,
.mat-mdc-raised-button,
.mat-mdc-stroked-button,
.mat-mdc-flat-button {
  font-family: var(--font-family) !important;
  font-size: var(--font-size-base) !important;
  font-weight: 500 !important;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  padding: var(--spacing-sm) var(--spacing-xl) !important;
  border-radius: var(--border-radius-md) !important;
  min-height: 36px;
  transition: var(--transition-fast) !important;
  border: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-sm);
  position: relative;
  overflow: hidden;
  box-shadow: var(--box-shadow);

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
  }

  &:hover::before {
    width: 300%;
    height: 300%;
  }

  &:not(:disabled) {
    &:hover {
      transform: translateY(-1px);
      box-shadow: 0 4px 8px var(--shadow-color);
    }

    &:active {
      transform: translateY(0);
    }
  }

  &.mat-primary {
    background-color: var(--primary-color);
    color: var(--background-color);
  }

  &.mat-stroked-button {
    border: 1px solid var(--border-color) !important;
    background-color: transparent !important;

    &:not(:disabled):hover {
      border-color: var(--primary-color) !important;
      color: var(--primary-color);
    }
  }

  &.primary {
    background-color: var(--primary-color);
    color: var(--background-color);

    &:hover:not(:disabled) {
      box-shadow: 0 4px 8px var(--primary-light);
      transform: translateY(-1px);
    }

    &:active:not(:disabled) {
      transform: translateY(0);
    }
  }

  &.secondary {
    background-color: transparent;
    border: 1px solid var(--border-color);
    color: var(--text-primary);

    &:hover:not(:disabled) {
      border-color: var(--primary-color);
      color: var(--primary-color);
    }
  }

  &.icon-button {
    min-width: 36px;
    width: 36px;
    padding: var(--spacing-sm);
    border-radius: 50%;
    
    i {
      font-size: var(--font-size-lg);
    }
  }
}

/* Dialog styles */
.mat-dialog-container,
.mat-mdc-dialog-container {
  border-radius: var(--border-radius-lg) !important;
  padding: 0 !important;
  max-height: 100vh !important;
  overflow: hidden !important;
  display: flex !important;
  flex-direction: column !important;

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: var(--background-secondary);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--text-secondary);
    border-radius: 4px;

    &:hover {
      background: var(--text-primary);
    }
  }
}

/* Global dialog container structure for sticky footer */
.dialog-container {
  display: flex !important;
  flex-direction: column !important;
  min-height: 400px;
  max-height: 90vh;
  overflow: hidden;
  background: var(--background-primary);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Dialog header styles */
.dialog-header {
  height: 3.5rem;
  min-height: 3.5rem;
  padding: 0 var(--spacing-lg);
  background: var(--background-secondary);
  border-bottom: 1px solid var(--border-color);
  flex-shrink: 0;
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;

  h2 {
    margin: 0;
    font-size: var(--font-size-xl);
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

/* Dialog content with scroll */
.dialog-content {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  padding: var(--spacing-lg);
  min-width: 0;
  background: var(--background-primary);

  &::-webkit-scrollbar {
    width: 8px;
  }

  &::-webkit-scrollbar-track {
    background: var(--background-secondary);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--text-secondary);
    border-radius: 4px;

    &:hover {
      background: var(--text-primary);
    }
  }

  > * {
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
  }

  typed-input-mapping-widget,
  input-mapping-widget,
  typed-input-widget,
  input-widget,
  dropdown-widget,
  toggle-widget,
  file-widget {
    display: block;
    margin-bottom: var(--spacing-md);
    width: 100%;
    min-width: 0;
  }
}

/* Sticky dialog actions footer */
.dialog-actions {
  height: 3.5rem;
  min-height: 3.5rem;
  padding: 0 var(--spacing-lg);
  background: var(--background-secondary);
  border-top: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: var(--spacing-sm);
  flex-shrink: 0;
  position: sticky;
  bottom: 0;
  z-index: 10;
  box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.05);
}

/* Attribute window specific styles */
.attribute-window-dialog {
  display: flex;
  flex-direction: column;
  height: 100vh;
  min-width: 400px !important;
  max-width: 600px !important;
  width: auto !important;
  background: var(--background-primary);

  .mat-mdc-dialog-surface {
    width: auto !important;
  }
  .dialog-header {
    height: 3.5rem;
    min-height: 3.5rem;
    padding: 0 var(--spacing-lg);
    background: var(--background-secondary);
    border-bottom: 1px solid var(--border-color);
    flex-shrink: 0;
    display: flex;
    align-items: center;

    h2 {
      margin: 0;
      font-size: var(--font-size-xl);
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  .dialog-content {
    flex: 1;
    overflow-y: auto;
    overflow-x: hidden;
    padding: var(--spacing-lg);
    min-width: 0; // Enable flex child shrinking

    &::-webkit-scrollbar {
      width: 8px;
    }

    &::-webkit-scrollbar-track {
      background: var(--background-secondary);
      border-radius: 4px;
    }

    &::-webkit-scrollbar-thumb {
      background: var(--text-secondary);
      border-radius: 4px;

      &:hover {
        background: var(--text-primary);
      }
    }

    > * {
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
    }

    typed-input-mapping-widget,
    input-mapping-widget,
    typed-input-widget,
    input-widget,
    dropdown-widget,
    toggle-widget,
    file-widget {
      display: block;
      margin-bottom: var(--spacing-md);
      width: 100%;
      min-width: 0;
    }
  }
  .dialog-actions {
    height: 3.5rem;
    min-height: 3.5rem;
    padding: 0 var(--spacing-lg);
    background: var(--background-secondary);
    border-top: 1px solid var(--border-color);
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: var(--spacing-sm);
    flex-shrink: 0;
    position: sticky;
    bottom: 0;
    z-index: 10;
    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.05);
  }
}

/* Table styles */
.table-container {
  background: var(--background-primary);
  border-radius: var(--border-radius-lg);
  box-shadow: 0 2px 12px var(--shadow-color),
             0 1px 2px rgba(0, 0, 0, 0.02);
  overflow: hidden;
  border: 1px solid var(--border-color);
}

table {
  width: 100%;
}

.mat-mdc-header-cell {
  background: var(--background-secondary);
  color: var(--text-primary);
  font-weight: 500;
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-size-base);

  mat-icon {
    margin-right: var(--spacing-sm);
    vertical-align: middle;
    font-size: var(--font-size-lg);
  }
}

.mat-mdc-cell {
  padding: var(--spacing-xs) var(--spacing-md);
  font-size: var(--font-size-base);
}

.mat-mdc-row {
  transition: var(--transition-fast);
  
  &:hover {
    background-color: var(--background-secondary);
    transform: scale(1.001);
  }
}

/* Apply Material Icons font family */
.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 18px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

/* Enhanced icon centering and sizing for all contexts */
mat-icon {
  vertical-align: middle;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  width: 20px;
  height: 20px;
  line-height: 1;
}

/* Icon spacing in buttons */
button mat-icon {
  margin-right: 4px;
  
  &:only-child {
    margin-right: 0;
  }
}

/* Icon spacing in headers */
.dialog-header mat-icon,
.canvas-header mat-icon,
.nodes-header mat-icon,
.title-section mat-icon {
  margin-right: 8px;
  color: var(--primary-color);
  font-size: 20px;
  width: 20px;
  height: 20px;
}

/* Icon spacing in table headers */
.mat-mdc-header-cell mat-icon {
  margin-right: 6px;
  font-size: 16px;
  width: 16px;
  height: 16px;
  color: var(--primary-color);
}

/* Icon spacing in table cells */
.mat-mdc-cell mat-icon {
  margin-right: 4px;
  font-size: 16px;
  width: 16px;
  height: 16px;
  color: var(--text-secondary);
}

/* Ensure proper icon sizing in different contexts */
.mat-icon-button mat-icon {
  margin: 0;
  font-size: 18px;
  width: 18px;
  height: 18px;
}

.title-section mat-icon {
  font-size: 24px;
  width: 24px;
  height: 24px;
  margin-right: 8px;
}

.search-box mat-icon {
  color: var(--text-secondary);
  font-size: 18px;
  width: 18px;
  height: 18px;
}

.date-cell mat-icon {
  font-size: 16px;
  width: 16px;
  height: 16px;
  margin-right: 4px;
}

/* Dialog Headers Enhancement */
.dialog-header,
.canvas-header,
.nodes-header,
.title-section {
  background: #ffffff;
  color: var(--text-primary);
  padding: 0 16px;
  border-radius: 8px 8px 0 0;
  box-shadow: 0 2px 12px rgba(108, 99, 255, 0.15), 
              0 1px 3px rgba(0, 0, 0, 0.1);
  margin-bottom: 0;
  border-bottom: 1px solid rgba(108, 99, 255, 0.1);
  position: relative;
  overflow: hidden;
  height: 3.5rem;
  min-height: 3.5rem;
  display: flex;
  align-items: center;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(180deg, rgba(108, 99, 255, 0.02) 0%, transparent 100%);
    pointer-events: none;
  }

  h1, h2, h3, h4, h5, h6 {
    color: var(--text-primary);
    margin: 0;
    font-weight: 600;
    letter-spacing: 0.3px;
    display: flex;
    align-items: center;
    gap: 12px;
    z-index: 1;
    position: relative;
    font-size: 18px;

    mat-icon {
      color: var(--primary-color);
    }
  }
  button {
    background: rgba(108, 99, 255, 0.1);
    color: var(--primary-color);
    border: 1px solid rgba(108, 99, 255, 0.2);
    border-radius: 6px;
    transition: all 0.2s ease;
    z-index: 1;
    position: relative;
    padding: 8px 12px;
    font-size: 14px;

    &:hover {
      background: rgba(108, 99, 255, 0.15);
      border-color: var(--primary-color);
      transform: translateY(-1px);
      box-shadow: 0 2px 8px rgba(108, 99, 255, 0.2);
    }

    mat-icon {
      color: inherit;
    }
  }

  .title-content,
  .canvas-controls {
    display: flex;
    align-items: center;
    gap: 12px;
    z-index: 1;
    position: relative;

    .total-count {
      background: rgba(108, 99, 255, 0.1);
      color: var(--primary-color);
      padding: 3px 10px;
      border-radius: 16px;
      font-size: 12px;
      border: 1px solid rgba(108, 99, 255, 0.2);
      font-weight: 500;
    }
  }
  .search-box {
    z-index: 1;
    position: relative;

    input {
      background: rgba(255, 255, 255, 0.8);
      border: 1px solid rgba(108, 99, 255, 0.2);
      color: var(--text-primary);
      border-radius: 6px;
      padding: 6px 12px;
      font-size: 14px;

      &::placeholder {
        color: var(--text-secondary);
      }

      &:focus {
        background: #ffffff;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 2px rgba(108, 99, 255, 0.1);
      }
    }

    mat-icon {
      color: var(--text-secondary);
    }
  }
}

/* Card Headers Enhancement */
mat-card-header,
.mat-mdc-card-header {
  background: #ffffff;
  color: var(--text-primary);
  padding: 8px 12px;
  border-radius: 8px 8px 0 0;
  margin: -20px -20px 16px -20px;
  position: relative;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(108, 99, 255, 0.1), 
              0 1px 2px rgba(0, 0, 0, 0.05);
  border-bottom: 1px solid rgba(108, 99, 255, 0.1);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(180deg, rgba(108, 99, 255, 0.02) 0%, transparent 100%);
    pointer-events: none;
  }

  .mat-mdc-card-title,
  mat-card-title {
    color: var(--text-primary);
    font-weight: 600;
    letter-spacing: 0.3px;
    z-index: 1;
    position: relative;
    font-size: 16px;
  }

  .mat-mdc-card-subtitle,
  mat-card-subtitle {
    color: var(--text-secondary);
    z-index: 1;
    position: relative;
  }
}

/* Global fix for Material Design button hover circle shade overlapping icons */
.mat-mdc-icon-button {
  /* Disable Material Design ripple effects that create circle shade */
  .mat-mdc-button-ripple,
  .mat-ripple,
  .mdc-button__ripple {
    display: none !important;
  }
  
  /* Override Material Design hover state layer that creates circle background */
  &::before,
  &::after,
  .mdc-button__ripple::before,
  .mdc-button__ripple::after {
    display: none !important;
  }
  
  /* Ensure proper icon centering */
  mat-icon {
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    margin: 0 !important;
  }
  
  /* Custom hover effect without circle shade */
  &:hover:not([disabled]) {
    background-color: rgba(108, 99, 255, 0.1) !important;
    
    mat-icon {
      color: var(--primary-color) !important;
    }
  }
}

/* Fix for all Material Design buttons to ensure proper icon centering */
.mat-mdc-button,
.mat-mdc-raised-button,
.mat-mdc-outlined-button {
  mat-icon {
    display: inline-flex !important;
    align-items: center !important;
    justify-content: center !important;
    vertical-align: middle !important;
  }
}

/* Enhanced toggle widget theming */
input[type="checkbox"],
input[type="radio"] {
  accent-color: var(--primary-color) !important;
  
  &:checked {
    background-color: var(--primary-color) !important;
    border-color: var(--primary-color) !important;
  }
  
  &:focus {
    outline: 2px solid rgba(108, 99, 255, 0.3) !important;
    outline-offset: 2px !important;
  }
}

/* Enhanced Material Design toggle button theming */
.mat-mdc-icon-button {
  transition: all 0.2s ease !important;
  
  /* Primary color toggle buttons */
  &[color="primary"] {
    color: var(--primary-color) !important;
    
    mat-icon {
      color: inherit !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(108, 99, 255, 0.1) !important;
      transform: scale(1.05) !important;
    }
  }
  
  /* Warning color toggle buttons */
  &[color="warn"] {
    color: #f44336 !important;
    
    mat-icon {
      color: inherit !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(244, 67, 54, 0.1) !important;
      transform: scale(1.05) !important;
    }
  }
  
  /* Default/neutral color toggle buttons */
  &[color="default"],
  &:not([color]) {
    color: var(--text-secondary) !important;
    
    mat-icon {
      color: inherit !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(0, 0, 0, 0.05) !important;
      color: var(--text-primary) !important;
      transform: scale(1.05) !important;
      
      mat-icon {
        color: inherit !important;
      }
    }
  }
}

/* Generic toggle styling - class-based approach for better control */
.toggle-button-active,
.mat-mdc-icon-button.toggle-active {
  color: var(--primary-color) !important;
  
  mat-icon {
    color: var(--primary-color) !important;
  }
  
  &:hover:not([disabled]) {
    background-color: rgba(108, 99, 255, 0.1) !important;
    color: var(--primary-color) !important;
    transform: scale(1.05) !important;
    
    mat-icon {
      color: var(--primary-color) !important;
    }
  }
}

.toggle-button-inactive,
.mat-mdc-icon-button.toggle-inactive {
  color: var(--text-secondary) !important;
  
  mat-icon {
    color: var(--text-secondary) !important;
  }
  
  &:hover:not([disabled]) {
    background-color: rgba(0, 0, 0, 0.05) !important;
    color: var(--text-primary) !important;
    transform: scale(1.05) !important;
    
    mat-icon {
      color: var(--text-primary) !important;
    }
  }
}

/* Icon-specific toggle styling using attribute selectors */
mat-icon {
  transition: all 0.2s ease !important;
  
  /* Style toggle_on icon to always use primary color when visible */
  &[fontIcon="toggle_on"] {
    color: var(--primary-color) !important;
  }
  
  /* Style toggle_off icon to use secondary color when visible */
  &[fontIcon="toggle_off"] {
    color: var(--text-secondary) !important;
  }
  
  /* Style based on icon content for Material Icons */
  &:before {
    transition: color 0.2s ease;
  }
}

/* Content-based icon styling for Material Icons font */
mat-icon:not([fontIcon]) {
  /* When icon content is toggle_on, apply primary color */
  &:has-text("toggle_on"),
  &[data-mat-icon-name="toggle_on"] {
    color: var(--primary-color) !important;
  }
  
  /* When icon content is toggle_off, apply secondary color */
  &:has-text("toggle_off"),
  &[data-mat-icon-name="toggle_off"] {
    color: var(--text-secondary) !important;
  }
}

/* Fallback using CSS custom properties for toggle icons */
.mat-mdc-icon-button {
  /* When button contains toggle_on icon */
  &:has(mat-icon[fontIcon="toggle_on"]),
  &[data-toggle-state="active"] {
    color: var(--primary-color) !important;
    
    mat-icon {
      color: var(--primary-color) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(108, 99, 255, 0.1) !important;
    }
  }
  
  /* When button contains toggle_off icon */
  &:has(mat-icon[fontIcon="toggle_off"]),
  &[data-toggle-state="inactive"] {
    color: var(--text-secondary) !important;
    
    mat-icon {
      color: var(--text-secondary) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(0, 0, 0, 0.05) !important;
      color: var(--text-primary) !important;
      
      mat-icon {
        color: var(--text-primary) !important;
      }
    }
  }
}

/* Toggle switches (if using mat-slide-toggle) */
.mat-mdc-slide-toggle {
  &.mat-checked {
    .mdc-switch__track {
      background-color: var(--primary-color) !important;
    }
    
    .mdc-switch__handle {
      background-color: var(--primary-color) !important;
    }
  }
}

/* Remove border and shadow from main content to match flat look */
mat-sidenav-content {
  background: var(--background-secondary);
  box-shadow: none;
}

/* Remove border from sidenav */
mat-sidenav {
  border-right: none !important;
}

/* Override Angular Material Sidenav default margins */
mat-sidenav-container.mat-drawer-container {
  .mat-drawer-content,
  .mat-sidenav-content {
    margin-left: 0 !important;
    margin-right: 0 !important;
    transform: none !important;
    transition: none !important;
  }
}

/* Ensure sidenav content fills completely */
mat-sidenav-content {
  margin: 0 !important;
  padding: 0 !important;
}

/* Global Search Box Styles */
.search-box {
  position: relative;
  width: 100%;
  
  mat-icon,
  fa-icon {
    position: absolute;
    left: 8px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-secondary);
    font-size: 14px;
    z-index: 1;
    pointer-events: none;
  }
  
  input {
    width: 100%;
    height: 36px;
    padding: 0 12px 0 32px;
    border: none;
    border-radius: var(--border-radius-md);
    background-color: #f5f5f7;
    color: var(--text-primary);
    font-size: var(--font-size-base);
    transition: var(--transition-fast);
    box-sizing: border-box;
    font-family: var(--font-family);
    
    &:focus {
      outline: none;
      background-color: var(--background-primary);
      box-shadow: 0 0 0 2px rgba(0, 102, 204, 0.25);
    }
    
    &::placeholder {
      color: var(--text-secondary);
      font-size: var(--font-size-base);
    }
  }
  
  /* Compact variant for smaller spaces */
  &.compact {
    input {
      height: 32px;
      font-size: 12px;
      border-radius: 6px;
      
      &::placeholder {
        font-size: 12px;
      }
    }
    
    mat-icon,
    fa-icon {
      font-size: 14px;
    }
  }
  
  /* Inline variant for right-aligned search */
  &.inline {
    width: auto;
    text-align: right;
    
    input {
      width: 300px;
      padding-left: 40px;
    }
    
    mat-icon,
    fa-icon {
      left: 12px;
    }
  }
}

/* Search section wrapper */
.search-section {
  margin-bottom: var(--spacing-md);
  
  /* For palette/sidebar contexts */
  &.palette {
    margin-bottom: var(--spacing-md);
  }
}

/* =================================
   TOGGLE BUTTON UTILITY CLASSES
   ================================= */

/* Generic toggle button utility classes for easy application */
.btn-toggle {
  transition: all 0.2s ease !important;
  border-radius: 50% !important;
  
  mat-icon {
    transition: all 0.2s ease !important;
  }
  
  &:hover:not([disabled]) {
    transform: scale(1.05) !important;
  }
  
  /* Active state - checked/on state */
  &.active,
  &[data-state="active"],
  &[aria-pressed="true"] {
    color: var(--primary-color) !important;
    
    mat-icon {
      color: var(--primary-color) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(108, 99, 255, 0.1) !important;
    }
  }
  
  /* Inactive state - unchecked/off state */
  &.inactive,
  &[data-state="inactive"],
  &[aria-pressed="false"] {
    color: var(--text-secondary) !important;
    
    mat-icon {
      color: var(--text-secondary) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(0, 0, 0, 0.05) !important;
      color: var(--text-primary) !important;
      
      mat-icon {
        color: var(--text-primary) !important;
      }
    }
  }
}

/* Toggle button variants */
.btn-toggle-primary {
  &.active {
    color: var(--primary-color) !important;
    background-color: rgba(108, 99, 255, 0.1) !important;
  }
}

.btn-toggle-success {
  &.active {
    color: #28a745 !important;
    background-color: rgba(40, 167, 69, 0.1) !important;
  }
}

.btn-toggle-warning {
  &.active {
    color: #ffc107 !important;
    background-color: rgba(255, 193, 7, 0.1) !important;
  }
}

.btn-toggle-danger {
  &.active {
    color: #dc3545 !important;
    background-color: rgba(220, 53, 69, 0.1) !important;
  }
}

/* Size variants */
.btn-toggle-sm {
  width: 32px !important;
  height: 32px !important;
  
  mat-icon {
    font-size: 18px !important;
    width: 18px !important;
    height: 18px !important;
  }
}

.btn-toggle-lg {
  width: 48px !important;
  height: 48px !important;
  
  mat-icon {
    font-size: 28px !important;
    width: 28px !important;
    height: 28px !important;
  }
}

/* Icon-based toggle detection (automatic state detection) */
.mat-mdc-icon-button {
  /* Automatic detection based on toggle icon content */
  &:has(mat-icon:contains("toggle_on")) {
    color: var(--primary-color) !important;
    
    mat-icon {
      color: var(--primary-color) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(108, 99, 255, 0.1) !important;
    }
  }
  
  &:has(mat-icon:contains("toggle_off")) {
    color: var(--text-secondary) !important;
    
    mat-icon {
      color: var(--text-secondary) !important;
    }
    
    &:hover:not([disabled]) {
      background-color: rgba(0, 0, 0, 0.05) !important;
      color: var(--text-primary) !important;
      
      mat-icon {
        color: var(--text-primary) !important;
      }
    }
  }
}

/* =================================
   END TOGGLE BUTTON UTILITIES
   ================================= */